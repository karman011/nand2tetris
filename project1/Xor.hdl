// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Xor.hdl
/**
 * Exclusive-or gate:
 * if ((a and Not(b)) or (Not(a) and b)) out = 1, else out = 0
 */
CHIP Xor {
    IN a, b;
    OUT out;

    PARTS:
    /**
    * XOR = (a AND (NOT b)) OR ((NOT a) AND b )
    * NOT a = a NAND a;
    * NOT b = b NAND b;
    * a AND (NOT b) = NOT( a NAND NOT b ) = NOT( a NAND b NAND b );
    * So XOR = NOT( a NAND b NAND b ) OR NOT( a NAND a NAND b);
    *        = NOT( ( a NAND b NAND b) AND ( a NAND a NAND b);
    *        = ( a NAND b NAND b ) NAND (a NAND b NAND a );
    * NOTE: a NAND b = NOT(a AND b) = NOT(b AND a) = b NAND a; 
    */
    Nand(a = a, b = b, out = aNandb);
    Nand(a = aNandb, b = b, out = aNandbNandb);
    Nand(a = aNandb, b = a, out = aNandbNanda);
    Nand(a = aNandbNandb, b = aNandbNanda, out = out);

    
    //// Replace this comment with your code.
}